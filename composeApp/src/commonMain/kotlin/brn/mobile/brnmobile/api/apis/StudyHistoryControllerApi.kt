/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package brn.mobile.brnmobile.api.apis

import brn.mobile.brnmobile.api.models.BaseResponseDto
import brn.mobile.brnmobile.api.models.BaseSingleObjectResponseDto
import brn.mobile.brnmobile.api.models.StudyHistoryDto

import brn.mobile.brnmobile.api.infrastructure.*
import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import io.ktor.http.ParametersBuilder
import kotlinx.datetime.LocalDate

open class StudyHistoryControllerApi(
    baseUrl: String = ApiClient.BASE_URL,
    httpClientEngine: HttpClientEngine? = null,
    httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
) : ApiClient(
    baseUrl,
    httpClientEngine,
    httpClientConfig,
) {

    /**
     * Get current user&#39;s study histories for period. Where from and to are dates in yyyy-MM-dd format
     *
     * @param from from
     * @param to to
     * @return BaseResponseDto
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun getHistoriesUsingGET2(
        from: LocalDate,
        to: LocalDate
    ): HttpResponse<BaseResponseDto> {

        val localVariableAuthNames = listOf<String>()

        val localVariableBody =
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        from?.apply { localVariableQuery["from"] = listOf("$from") }
        to?.apply { localVariableQuery["to"] = listOf("$to") }

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/study-history/histories",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }

    /**
     * Get current user&#39;s month study histories by month and year
     *
     * @param month month
     * @param year year
     * @return BaseResponseDto
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun getMonthHistoriesUsingGET1(
        month: kotlin.Int,
        year: kotlin.Int
    ): HttpResponse<BaseResponseDto> {

        val localVariableAuthNames = listOf<String>()

        val localVariableBody =
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
        month?.apply { localVariableQuery["month"] = listOf("$month") }
        year?.apply { localVariableQuery["year"] = listOf("$year") }

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/study-history/monthHistories",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }

    /**
     * Get current user&#39;s today work time: execution seconds
     *
     * @return BaseSingleObjectResponseDto
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun getTodayWorkDurationInSecondsUsingGET(): HttpResponse<BaseSingleObjectResponseDto> {

        val localVariableAuthNames = listOf<String>()

        val localVariableBody =
            io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/study-history/todayTimer",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
        )

        return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }

    /**
     * Save current user&#39;s study history
     *
     * @param studyHistoryDto studyHistoryDto
     * @return StudyHistoryDto
     */
    @Suppress("UNCHECKED_CAST")
    open suspend fun saveUsingPOST1(studyHistoryDto: StudyHistoryDto): HttpResponse<StudyHistoryDto> {

        val localVariableAuthNames = listOf<String>()

        val localVariableBody = studyHistoryDto

        val localVariableQuery = mutableMapOf<String, List<String>>()

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/study-history",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
        )

        return jsonRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
        ).wrap()
    }

}
