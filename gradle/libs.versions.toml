[versions]

kotlin = "2.0.20"
compose = "1.7.0-beta01"
agp = "8.7.1"
androidx-activityCompose = "1.9.3"
androidx-uiTest = "1.7.4"
skikoIos = "0.8.17"
voyager = "1.1.0-beta02"
coil = "3.0.0-alpha10"
napier = "2.7.1"
kotlinx-coroutines = "1.9.0-RC.2"
moko-mvvm = "0.16.1"
ktor = "3.0.0-beta-2"
composeIcons = "1.1.0"
kotlinx-serialization = "1.7.2"
multiplatformSettings = "1.2.0"
koin = "4.0.0-RC2"
kstore = "0.8.0"
datetime= "0.6.1"
libres = "1.2.2"
buildConfig = "5.4.0"
insets= "0.1.0-alpha10"
relayGradlePlugin = "0.3.12"

[libraries]

androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-uitest-testManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidx-uiTest" }
androidx-uitest-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidx-uiTest" }
skiko = { module = "org.jetbrains.skiko:skiko", version.ref = "skikoIos" }
skiko-ios = { module = "org.jetbrains.skiko:skiko-ios", version.ref = "skikoIos" }
skiko-iosarm64 = { module = "org.jetbrains.skiko:skiko-iosarm64", version.ref = "skikoIos" }
skiko-iosx64 = { module = "org.jetbrains.skiko:skiko-iosx64", version.ref = "skikoIos" }
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
coil = { module = "io.coil-kt.coil3:coil-compose-core", version.ref = "coil" }
coil-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
moko-mvvm = { module = "dev.icerock.moko:mvvm-compose", version.ref = "moko-mvvm" }
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-curl = { module = "io.ktor:ktor-client-curl", version.ref = "ktor" }
ktor-client-winhttp = { module = "io.ktor:ktor-client-winhttp", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
insetsx = { module = "com.moriatsushi.insetsx:insetsx", version.ref = "insets" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
libres = { module = "io.github.skeptick.libres:libres-compose", version.ref = "libres" }
composeIcons-featherIcons = { module = "br.com.devsrsouza.compose.icons:feather", version.ref = "composeIcons" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
multiplatformSettings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
kstore = { module = "io.github.xxfast:kstore", version.ref = "kstore" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }

[plugins]

multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
android-application = { id = "com.android.application", version.ref = "agp" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
libres = { id = "io.github.skeptick.libres", version.ref = "libres" }
buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfig" }
